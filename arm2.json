{
    "$schema": "http://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "vmAdminUsername": {
        "type": "string"
      },
      "vmAdminPassword": {
        "type": "securestring"
      },
      "azuserobjectid": {
        "type": "string"
      },
      "AzureUserName": {
        "type": "string"
      },
      "AzurePassword": {
        "type": "securestring"
      },
      "ODLID": {
        "type": "string"
      },
      "DeploymentID": {
        "type": "string"
      },
      "InstallCloudLabsShadow": {
        "type": "string",
        "defaultValue": "yes",
        "allowedValues": [
          "yes",
          "no"
        ]
      },
      "trainerUserName": {
        "type": "string"
      },
      "trainerUserPassword": {
        "type": "string"
      }
    },
    "variables": {
      "subscriptionid": "[subscription().subscriptionId]",
      "cloudlabsCommon": "[concat(' -AzureUserName ', parameters('AzureUserName'), ' -AzurePassword ', parameters('AzurePassword'), ' -AzureTenantID ', variables('AzureTenantID'), ' -AzureSubscriptionID ', variables('AzureSubscriptionID'), ' -ODLID ', parameters('ODLID'), ' -DeploymentID ', parameters('DeploymentID'),' -InstallCloudLabsShadow ', parameters('InstallCloudLabsShadow'),' -vmAdminPassword ', parameters('vmAdminPassword'))]",
      "Enable-CloudLabsEmbeddedShadow": "[concat(' -vmAdminUsername ', parameters('vmAdminUsername'),' -trainerUserName ', parameters('trainerUserName'), ' -trainerUserPassword ', parameters('trainerUserPassword'))]",
      "AzureSubscriptionID": "[subscription().subscriptionId]",
      "AzureTenantID": "[subscription().tenantId]",
      "location": "[resourceGroup().location]",
      "rgName": "[resourceGroup().name]",
      "sqlusername": "labsqladmin",
      "sqlpassword": "[parameters('vmAdminPassword')]",
      "networkInterfaceName": "[concat(variables('prefix'), '-nic')]",
      "networkSecurityGroupName": "[concat(variables('prefix'), '-nsg')]",
      "prefix": "vm",
      "publicIpAddressDNSName": "[concat(variables('prefix'), uniqueString(resourceGroup().id))]",
      "publicIpAddressName": "[concat(variables('prefix'), '-pip')]",
      "subnetName": "default",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/',variables('virtualNetworkName'), variables('subnetName'))]",
      "virtualMachineSize": "Standard_DS2_v2",
      "virtualNetworkName": "vNet",
      "vmName": "[concat('LabVM-',parameters('DeploymentID'))]"
    },
    "resources": [
      {
        "name": "[variables('vmName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2019-07-01",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
        ],
        "properties": {
          "osProfile": {
            "computerName": "[variables('vmName')]",
            "vmAdminUsername": "[parameters('vmAdminUsername')]",
            "vmAdminPassword": "[parameters('vmAdminPassword')]",
            "windowsConfiguration": {
              "provisionVmAgent": "true"
            }
          },
          "hardwareProfile": {
            "vmSize": "[variables('virtualMachineSize')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2022-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "fromImage",
              "name": "[concat(variables('vmName'), '-osdisk')]",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(variables('vmName'),'/', 'winExtension')]",
        "apiVersion": "2019-07-01",
        "location": "[resourceGroup().location]",
        "comments": "Script",
        "tags": {
          "displayName": "VM Extension"
        },
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
        ],
        "properties": {
          "publisher": "Microsoft.Compute",
          "type": "CustomScriptExtension",
          "typeHandlerVersion": "1.8",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "https://raw.githubusercontent.com/lalith2306/SpektraTask/refs/heads/main/shadow_common2.ps1",
              "https://raw.githubusercontent.com/lalith2306/SpektraTask/refs/heads/main/shadow2.ps1"
            ]
          },
          "protectedSettings": {
            "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File shadow2.ps1', variables('cloudlabsCommon'),variables('Enable-CloudLabsEmbeddedShadow'))]"
          }
        }
      },
      {
        "name": "[variables('virtualNetworkName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2019-09-01",
        "location": "[variables('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            }
          ]
        }
      },
      {
        "name": "[variables('networkInterfaceName')]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2019-07-01",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
          "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIpAddress": {
                  "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
          }
        }
      },
      {
        "name": "[variables('publicIpAddressName')]",
        "type": "Microsoft.Network/publicIpAddresses",
        "apiVersion": "2019-02-01",
        "location": "[variables('location')]",
        "properties": {
          "publicIpAllocationMethod": "Static",
          "dnsSettings": {
            "domainNameLabel": "[variables('publicIpAddressDNSName')]"
          }
        }
      },
      {
        "name": "[variables('networkSecurityGroupName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2019-02-01",
        "location": "[variables('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-rdp",
              "properties": {
                "priority": 1030,
                "protocol": "TCP",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "3389"
              }
            }
          ]
        }
      }
    ],
    "outputs": {
      "LabVM DNS Name": {
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpAddressName'))).dnsSettings.fqdn]",
        "type": "string"
      },
      "LabVM Admin Username": {
        "type": "string",
        "value": "[parameters('vmAdminUsername')]"
      },
      "LabVM Admin Password": {
        "type": "string",
        "value": "[parameters('vmAdminPassword')]"
      },
      "Deployment ID": {
        "type": "string",
        "value": "[parameters('DeploymentID')]"
      },
      "Trainer Password": {
        "type": "String",
        "value": "[parameters('trainerUserPassword')]"
      }
    }

  }


